{
  "name": "better-replace-on-save",
  "displayName": "Better Replace-on-Save",
  "description": "Configurable search and replace on save - with proper VSCode integration.",
  "version": "0.2.0",
  "publisher": "maxeonyx",
  "repository": "github:maxeonyx/better-replace-on-save",
  "engines": {
    "vscode": "^1.97.0"
  },
  "categories": [
    "Other",
    "Formatters"
  ],
  "keywords": [
    "replace",
    "replace-on-save",
    "search",
    "regex",
    "transformation",
    "code-actions",
    "formatting"
  ],
  "activationEvents": [
    "onStartupFinished"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "better-replace-on-save.applyReplacements",
        "title": "Apply Replacements",
        "category": "Better Replace-on-Save"
      },
      {
        "command": "better-replace-on-save.applySpecificReplacement",
        "title": "Apply Specific Replacement",
        "category": "Better Replace-on-Save",
        "description": "Apply a single replacement rule by ID, with optional language filter override"
      }
    ],
    "configuration": {
      "title": "Better Replace-on-Save",
      "properties": {
        "betterReplaceOnSave.replacements": {
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "search",
              "replace"
            ],
            "properties": {
              "search": {
                "type": "string",
                "description": "The string (regex pattern) to search for."
              },
              "replace": {
                "type": "string",
                "description": "The replacement string."
              },
              "languages": {
                "type": "array",
                "description": "VSCode language identifiers to restrict the replacement to (e.g., 'typescript', 'javascriptreact', 'python')",
                "items": {
                  "type": "string"
                }
              },
              "id": {
                "type": "string",
                "description": "Unique identifier for the replacement pattern. Enables specific code actions (source.applyReplacements.[id]) and allows applying individual replacements via command palette."
              }
            }
          },
          "default": [],
          "description": "Array of search and replace configurations. Example: [{\"search\": \"hello\", \"replace\": \"world\"}"
        },
        "betterReplaceOnSave.replacementsFiles": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [],
          "description": "Array of file paths containing replacement configurations. Files should contain JSON arrays of replacement objects with the same format as the replacements setting. Paths can be relative to workspace root or absolute."
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src",
    "test": "vscode-test",
    "package": "vsce package",
    "publish": "vsce publish"
  },
  "devDependencies": {
    "@types/mocha": "^10.0.10",
    "@types/node": "20.x",
    "@types/vscode": "^1.97.0",
    "@typescript-eslint/eslint-plugin": "^8.22.0",
    "@typescript-eslint/parser": "^8.22.0",
    "@vscode/test-cli": "^0.0.10",
    "@vscode/test-electron": "^2.4.1",
    "@vscode/vsce": "^3.2.2",
    "eslint": "^9.19.0",
    "typescript": "^5.7.3"
  }
}
